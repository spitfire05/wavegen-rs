name: Rust

on:
  pull_request:
    branches: [master]
  schedule: [cron: "40 1 * * 5"]

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings

jobs:
  build:
    strategy:
      matrix:
        build_args:
          ["", "--no-default-features --features libm", "--features libm"]
        toolchain: ["stable", "1.60"]

    runs-on: ubuntu-latest

    env:
      RUSTFLAGS: "--deny warnings"

    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain }}
      - name: cargo check
        run: cargo check --verbose ${{ matrix.build_args }}
      - name: Run tests
        if: matrix.toolchain == 'stable'
        run: cargo test --verbose ${{ matrix.build_args }}
      - name: Build examples
        if: matrix.toolchain == 'stable'
        run: cargo build --verbose --examples ${{ matrix.build_args }}

  miri:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@miri
      - run: cargo miri test --verbose
        env:
          MIRIFLAGS: -Zmiri-strict-provenance

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - name: Check code formatting
        run: cargo fmt -- --check
      - name: Run Clippy
        run: cargo clippy -- -Dclippy::all -Dclippy::pedantic

  # This job should depend on all required jobs.
  # We will make Bors watch this job to tell whether to merge or not.
  done:
    name: Done
    needs: [build, miri, lint]
    runs-on: ubuntu-latest
    steps:
      - name: Done
        run: echo Done

  outdated:
    name: Outdated
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/install@cargo-outdated
      - run: cargo outdated --workspace --exit-code 1
